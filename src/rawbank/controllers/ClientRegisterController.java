package rawbank.controllers;

import java.net.URL;
import java.util.Calendar;
import java.util.ResourceBundle;

import com.jfoenix.controls.JFXButton;
import com.myBank.Model.Entities.Client;
import com.myBank.Model.Entities.CompteCourant;
import com.myBank.Model.Entities.CompteEpargne;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import rawbank.utils.Account;

public class ClientRegisterController implements Initializable {
	String gn[]= {"M","F"};
	ObservableList<String> genderList = FXCollections.observableArrayList(gn);
	
	Calendar now = Calendar.getInstance();
	int year = now.get(Calendar.YEAR);
	int month = now.get(Calendar.MONTH);
	int day = now.get(Calendar.DAY_OF_MONTH);
	String currentDate = year+"/"+month+"/"+day;

	@FXML
	private TextField firstname;
	@FXML
	private TextField lastname;
	@FXML
	private TextField phoneNumber;
	@FXML
	private ChoiceBox<String> gender;
	@FXML
	private DatePicker birthday;
	@FXML
	private Label age;
	@FXML
	private TextField nationalID;
	@FXML
	private JFXButton clientRegisterBtn;
	@FXML
	private JFXButton cancelRegistrationBtn;
	@FXML
	private RadioButton savingAccount;
	@FXML
	private RadioButton currentAccount;

	// Event Listener on JFXButton[#clientRegisterBtn].onAction
	@FXML
	public void register(ActionEvent event) {
		
		if(birthday.getValue() ==null) {
			System.out.println("Birthday is required!");
		}
		else 
		{
			Client cl = new Client(null,firstname.getText(),lastname.getText(),nationalID.getText(),birthday.getValue().toString(),gender.getValue(),null,phoneNumber.getText());
			
			if(cl.getFirstname().equals("") || cl.getLastname().equals("") || cl.getPhone().equals("") || cl.getIdNat().equals("")) 
			{
				System.out.println("All fields are required!");
			}
			else if(cl.getFirstname().length()<2 || cl.getLastname().length()<2 || cl.getPhone().length()!=10 || cl.getIdNat().length()!=10) {
				System.out.println("All fields must have required length!");
			}else if(ClientsController.cl.exists(cl)) 
			{
				System.out.println("This client already exists in the system!");
			}
			else if(!currentAccount.isSelected() && !savingAccount.isSelected()) {
				System.out.println("Create the client's account, please !");
			}
			else {
				try {
				ClientsController.cl.save(cl);
		
				System.out.println("Client's information saved successfully!");
				}catch(Exception e) {
					System.out.println(e.getMessage());
				}
				
				if(currentAccount.isSelected()) {
					CompteCourant cc = new CompteCourant(null, Account.getAccountNumberCode(), currentDate, 0, 0, cl, 10);
					ClientsController.cmptDAO.save(cc);
					cl.setCurrentAccount(cc);
				}
				else if(savingAccount.isSelected()) {
					CompteEpargne ce = new CompteEpargne(null, Account.getAccountNumberCode(), currentDate, 0, 0, cl, 10);
					ClientsController.cmptDAO.save(ce);
					cl.setSavingAccount(ce);
				}
				ClientsController.clients.add(cl);
			}
		}
	}

	// Event Listener on JFXButton[#cancelRegistrationBtn].onAction
	@FXML
	public void cancelRegistration(ActionEvent event) {
		// TODO Autogenerated
	}
	
	@FXML
	public void chooseDate(ActionEvent event) {
		int birthYear = birthday.getValue().getYear();
		int thisAge = year-birthYear;
		age.setText("Age : "+ String.valueOf(thisAge));
		
	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		gender.setValue("M");
		gender.setItems(genderList);

	}
}
